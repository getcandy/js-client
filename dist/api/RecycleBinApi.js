/**
 * GetCandy
 * The GetCandy API
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@getcandy.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */
import ApiClient from "../ApiClient";
import Error from '../model/Error';
import Links from '../model/Links';
import RecycleBinCollection from '../model/RecycleBinCollection';
import RecycleBinResponse from '../model/RecycleBinResponse';
import Unauthorized from '../model/Unauthorized';
/**
* RecycleBin service.
* @module api/RecycleBinApi
* @version 0.9.0
*/

export default class RecycleBinApi {
  /**
  * Constructs a new RecycleBinApi. 
  * @alias module:api/RecycleBinApi
  * @class
  * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
  * default to {@link module:ApiClient#instance} if unspecified.
  */
  constructor(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;
  }
  /**
   * Delete item
   * Remove a recycle bin item  > This will also hard delete the model associated with the recycle bin item, this action is not reversable and will cause loss of data.
   * @param {String} itemId 
   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response
   */


  deleteRecycleBinItemIdWithHttpInfo(itemId) {
    let postBody = null; // verify the required parameter 'itemId' is set

    if (itemId === undefined || itemId === null) {
      throw new Error("Missing the required parameter 'itemId' when calling deleteRecycleBinItemId");
    }

    let pathParams = {
      'itemId': itemId
    };
    let queryParams = {};
    let headerParams = {};
    let formParams = {};
    let authNames = ['auth'];
    let contentTypes = [];
    let accepts = ['application/json'];
    let returnType = null;
    return this.apiClient.callApi('/recycle-bin/{itemId}', 'DELETE', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null);
  }
  /**
   * Delete item
   * Remove a recycle bin item  > This will also hard delete the model associated with the recycle bin item, this action is not reversable and will cause loss of data.
   * @param {String} itemId 
   * @return {Promise} a {@link https://www.promisejs.org/|Promise}
   */


  deleteRecycleBinItemId(itemId) {
    return this.deleteRecycleBinItemIdWithHttpInfo(itemId).then(function (response_and_data) {
      return response_and_data.data;
    });
  }
  /**
   * Get records
   * Returns a paginated list of all recycle bin items.
   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RecycleBinCollection} and HTTP response
   */


  getRecycleBinWithHttpInfo() {
    let postBody = null;
    let pathParams = {};
    let queryParams = {};
    let headerParams = {};
    let formParams = {};
    let authNames = ['auth'];
    let contentTypes = [];
    let accepts = ['application/json'];
    let returnType = RecycleBinCollection;
    return this.apiClient.callApi('/recycle-bin', 'GET', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null);
  }
  /**
   * Get records
   * Returns a paginated list of all recycle bin items.
   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RecycleBinCollection}
   */


  getRecycleBin() {
    return this.getRecycleBinWithHttpInfo().then(function (response_and_data) {
      return response_and_data.data;
    });
  }
  /**
   * Get item
   * Retrieves a recycle bin item.
   * @param {String} itemId 
   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RecycleBinResponse} and HTTP response
   */


  getRecycleBinItemIdWithHttpInfo(itemId) {
    let postBody = null; // verify the required parameter 'itemId' is set

    if (itemId === undefined || itemId === null) {
      throw new Error("Missing the required parameter 'itemId' when calling getRecycleBinItemId");
    }

    let pathParams = {
      'itemId': itemId
    };
    let queryParams = {};
    let headerParams = {};
    let formParams = {};
    let authNames = ['auth'];
    let contentTypes = [];
    let accepts = ['application/json'];
    let returnType = RecycleBinResponse;
    return this.apiClient.callApi('/recycle-bin/{itemId}', 'GET', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null);
  }
  /**
   * Get item
   * Retrieves a recycle bin item.
   * @param {String} itemId 
   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RecycleBinResponse}
   */


  getRecycleBinItemId(itemId) {
    return this.getRecycleBinItemIdWithHttpInfo(itemId).then(function (response_and_data) {
      return response_and_data.data;
    });
  }

}
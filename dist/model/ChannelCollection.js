/**
 * GetCandy
 * The GetCandy API
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@getcandy.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */
import ApiClient from '../ApiClient';
import Channel from './Channel';
import ChannelCollectionAllOf from './ChannelCollectionAllOf';
import Pagination from './Pagination';
/**
 * The ChannelCollection model module.
 * @module model/ChannelCollection
 * @version 0.9.0
 */

class ChannelCollection {
  /**
   * Constructs a new <code>ChannelCollection</code>.
   * @alias module:model/ChannelCollection
   * @extends module:model/Pagination
   * @implements module:model/ChannelCollectionAllOf
   * @implements module:model/Pagination
   */
  constructor() {
    ChannelCollectionAllOf.initialize(this);
    Pagination.initialize(this);
    ChannelCollection.initialize(this);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  static initialize(obj) {}
  /**
   * Constructs a <code>ChannelCollection</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ChannelCollection} obj Optional instance to populate.
   * @return {module:model/ChannelCollection} The populated <code>ChannelCollection</code> instance.
   */


  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new ChannelCollection();
      Pagination.constructFromObject(data, obj);
      ChannelCollectionAllOf.constructFromObject(data, obj);
      Pagination.constructFromObject(data, obj);

      if (data.hasOwnProperty('data')) {
        obj['data'] = ApiClient.convertToType(data['data'], [Channel]);
      }
    }

    return obj;
  }

}
/**
 * @member {Array.<module:model/Channel>} data
 */


ChannelCollection.prototype['data'] = undefined; // Implement ChannelCollectionAllOf interface:

/**
 * @member {Array.<module:model/Channel>} data
 */

ChannelCollectionAllOf.prototype['data'] = undefined; // Implement Pagination interface:

/**
 * @member {Number} current_page
 * @default 1
 */

Pagination.prototype['current_page'] = 1;
/**
 * @member {Number} from
 */

Pagination.prototype['from'] = undefined;
/**
 * @member {Number} last_page
 * @default 15
 */

Pagination.prototype['last_page'] = 15;
/**
 * @member {String} path
 */

Pagination.prototype['path'] = undefined;
/**
 * @member {Number} per_page
 */

Pagination.prototype['per_page'] = undefined;
/**
 * @member {Number} to
 */

Pagination.prototype['to'] = undefined;
/**
 * @member {Number} total
 */

Pagination.prototype['total'] = undefined;
export default ChannelCollection;
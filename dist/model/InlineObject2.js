/**
 * GetCandy
 * The GetCandy API
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@getcandy.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */
import ApiClient from '../ApiClient';
import AttributesLookups from './AttributesLookups';
import AttributesName from './AttributesName';
/**
 * The InlineObject2 model module.
 * @module model/InlineObject2
 * @version 0.9.0
 */

class InlineObject2 {
  /**
   * Constructs a new <code>InlineObject2</code>.
   * @alias module:model/InlineObject2
   * @param groupId {String} 
   * @param name {Array.<module:model/AttributesName>} 
   * @param handle {String} 
   */
  constructor(groupId, name, handle) {
    InlineObject2.initialize(this, groupId, name, handle);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  static initialize(obj, groupId, name, handle) {
    obj['group_id'] = groupId;
    obj['name'] = name;
    obj['handle'] = handle;
  }
  /**
   * Constructs a <code>InlineObject2</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/InlineObject2} obj Optional instance to populate.
   * @return {module:model/InlineObject2} The populated <code>InlineObject2</code> instance.
   */


  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new InlineObject2();

      if (data.hasOwnProperty('group_id')) {
        obj['group_id'] = ApiClient.convertToType(data['group_id'], 'String');
      }

      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], [AttributesName]);
      }

      if (data.hasOwnProperty('handle')) {
        obj['handle'] = ApiClient.convertToType(data['handle'], 'String');
      }

      if (data.hasOwnProperty('position')) {
        obj['position'] = ApiClient.convertToType(data['position'], 'Number');
      }

      if (data.hasOwnProperty('filterable')) {
        obj['filterable'] = ApiClient.convertToType(data['filterable'], 'Boolean');
      }

      if (data.hasOwnProperty('scopeable')) {
        obj['scopeable'] = ApiClient.convertToType(data['scopeable'], 'Number');
      }

      if (data.hasOwnProperty('translatable')) {
        obj['translatable'] = ApiClient.convertToType(data['translatable'], 'Boolean');
      }

      if (data.hasOwnProperty('variant')) {
        obj['variant'] = ApiClient.convertToType(data['variant'], 'Boolean');
      }

      if (data.hasOwnProperty('searchable')) {
        obj['searchable'] = ApiClient.convertToType(data['searchable'], 'Boolean');
      }

      if (data.hasOwnProperty('localised')) {
        obj['localised'] = ApiClient.convertToType(data['localised'], 'Boolean');
      }

      if (data.hasOwnProperty('type')) {
        obj['type'] = ApiClient.convertToType(data['type'], 'String');
      }

      if (data.hasOwnProperty('required')) {
        obj['required'] = ApiClient.convertToType(data['required'], 'Boolean');
      }

      if (data.hasOwnProperty('lookups')) {
        obj['lookups'] = ApiClient.convertToType(data['lookups'], [AttributesLookups]);
      }

      if (data.hasOwnProperty('system')) {
        obj['system'] = ApiClient.convertToType(data['system'], 'Boolean');
      }
    }

    return obj;
  }

}
/**
 * @member {String} group_id
 */


InlineObject2.prototype['group_id'] = undefined;
/**
 * @member {Array.<module:model/AttributesName>} name
 */

InlineObject2.prototype['name'] = undefined;
/**
 * @member {String} handle
 */

InlineObject2.prototype['handle'] = undefined;
/**
 * @member {Number} position
 */

InlineObject2.prototype['position'] = undefined;
/**
 * @member {Boolean} filterable
 * @default false
 */

InlineObject2.prototype['filterable'] = false;
/**
 * @member {Number} scopeable
 */

InlineObject2.prototype['scopeable'] = undefined;
/**
 * @member {Boolean} translatable
 * @default false
 */

InlineObject2.prototype['translatable'] = false;
/**
 * @member {Boolean} variant
 * @default false
 */

InlineObject2.prototype['variant'] = false;
/**
 * @member {Boolean} searchable
 * @default false
 */

InlineObject2.prototype['searchable'] = false;
/**
 * @member {Boolean} localised
 * @default false
 */

InlineObject2.prototype['localised'] = false;
/**
 * @member {String} type
 * @default 'text'
 */

InlineObject2.prototype['type'] = 'text';
/**
 * @member {Boolean} required
 * @default false
 */

InlineObject2.prototype['required'] = false;
/**
 * @member {Array.<module:model/AttributesLookups>} lookups
 */

InlineObject2.prototype['lookups'] = undefined;
/**
 * @member {Boolean} system
 * @default false
 */

InlineObject2.prototype['system'] = false;
export default InlineObject2;
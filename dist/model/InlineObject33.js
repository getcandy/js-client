/**
 * GetCandy
 * The GetCandy API
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@getcandy.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */
import ApiClient from '../ApiClient';
import CollectionsName from './CollectionsName';
/**
 * The InlineObject33 model module.
 * @module model/InlineObject33
 * @version 0.9.0
 */

class InlineObject33 {
  /**
   * Constructs a new <code>InlineObject33</code>.
   * @alias module:model/InlineObject33
   * @param type {module:model/InlineObject33.TypeEnum} 
   */
  constructor(type) {
    InlineObject33.initialize(this, type);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  static initialize(obj, type) {
    obj['type'] = type;
  }
  /**
   * Constructs a <code>InlineObject33</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/InlineObject33} obj Optional instance to populate.
   * @return {module:model/InlineObject33} The populated <code>InlineObject33</code> instance.
   */


  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new InlineObject33();

      if (data.hasOwnProperty('type')) {
        obj['type'] = ApiClient.convertToType(data['type'], 'String');
      }

      if (data.hasOwnProperty('name')) {
        obj['name'] = CollectionsName.constructFromObject(data['name']);
      }
    }

    return obj;
  }

}
/**
 * @member {module:model/InlineObject33.TypeEnum} type
 */


InlineObject33.prototype['type'] = undefined;
/**
 * @member {module:model/CollectionsName} name
 */

InlineObject33.prototype['name'] = undefined;
/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */

InlineObject33['TypeEnum'] = {
  /**
   * value: "standard"
   * @const
   */
  "standard": "standard",

  /**
   * value: "dhl"
   * @const
   */
  "dhl": "dhl",

  /**
   * value: "regional"
   * @const
   */
  "regional": "regional"
};
export default InlineObject33;
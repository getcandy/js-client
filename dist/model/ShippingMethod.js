/**
 * GetCandy
 * The GetCandy API
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@getcandy.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */
import ApiClient from '../ApiClient';
import AttributeData from './AttributeData';
import LocalisedAttributeData from './LocalisedAttributeData';
import ShippingMethodAllOf from './ShippingMethodAllOf';
/**
 * The ShippingMethod model module.
 * @module model/ShippingMethod
 * @version 0.9.0
 */

class ShippingMethod {
  /**
   * Constructs a new <code>ShippingMethod</code>.
   * @alias module:model/ShippingMethod
   * @implements module:model/ShippingMethodAllOf
   * @implements module:model/AttributeData
   * @implements module:model/LocalisedAttributeData
   */
  constructor() {
    ShippingMethodAllOf.initialize(this);
    AttributeData.initialize(this);
    LocalisedAttributeData.initialize(this);
    ShippingMethod.initialize(this);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  static initialize(obj) {}
  /**
   * Constructs a <code>ShippingMethod</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ShippingMethod} obj Optional instance to populate.
   * @return {module:model/ShippingMethod} The populated <code>ShippingMethod</code> instance.
   */


  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new ShippingMethod();
      ShippingMethodAllOf.constructFromObject(data, obj);
      AttributeData.constructFromObject(data, obj);
      LocalisedAttributeData.constructFromObject(data, obj);

      if (data.hasOwnProperty('type')) {
        obj['type'] = ApiClient.convertToType(data['type'], 'String');
      }

      if (data.hasOwnProperty('attribute_data')) {
        obj['attribute_data'] = ApiClient.convertToType(data['attribute_data'], Object);
      }

      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }

      if (data.hasOwnProperty('description')) {
        obj['description'] = ApiClient.convertToType(data['description'], 'String');
      }
    }

    return obj;
  }

}
/**
 * @member {String} type
 */


ShippingMethod.prototype['type'] = undefined;
/**
 * @member {Object} attribute_data
 */

ShippingMethod.prototype['attribute_data'] = undefined;
/**
 * @member {String} name
 */

ShippingMethod.prototype['name'] = undefined;
/**
 * @member {String} description
 */

ShippingMethod.prototype['description'] = undefined; // Implement ShippingMethodAllOf interface:

/**
 * @member {String} type
 */

ShippingMethodAllOf.prototype['type'] = undefined; // Implement AttributeData interface:

/**
 * @member {Object} attribute_data
 */

AttributeData.prototype['attribute_data'] = undefined; // Implement LocalisedAttributeData interface:

/**
 * @member {String} name
 */

LocalisedAttributeData.prototype['name'] = undefined;
/**
 * @member {String} description
 */

LocalisedAttributeData.prototype['description'] = undefined;
export default ShippingMethod;
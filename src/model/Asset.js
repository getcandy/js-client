/**
 * GetCandy
 * The GetCandy API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AssetTransformCollection from './AssetTransformCollection';
import TagCollection from './TagCollection';

/**
 * The Asset model module.
 * @module model/Asset
 * @version 1.0.0
 */
class Asset {
    /**
     * Constructs a new <code>Asset</code>.
     * @alias module:model/Asset
     */
    constructor() { 
        
        Asset.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Asset</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Asset} obj Optional instance to populate.
     * @return {module:model/Asset} The populated <code>Asset</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Asset();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('caption')) {
                obj['caption'] = ApiClient.convertToType(data['caption'], 'String');
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('external')) {
                obj['external'] = ApiClient.convertToType(data['external'], 'Boolean');
            }
            if (data.hasOwnProperty('position')) {
                obj['position'] = ApiClient.convertToType(data['position'], 'Number');
            }
            if (data.hasOwnProperty('primary')) {
                obj['primary'] = ApiClient.convertToType(data['primary'], 'Boolean');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
            if (data.hasOwnProperty('sub_kind')) {
                obj['sub_kind'] = ApiClient.convertToType(data['sub_kind'], 'String');
            }
            if (data.hasOwnProperty('extension')) {
                obj['extension'] = ApiClient.convertToType(data['extension'], 'String');
            }
            if (data.hasOwnProperty('original_filename')) {
                obj['original_filename'] = ApiClient.convertToType(data['original_filename'], 'String');
            }
            if (data.hasOwnProperty('size')) {
                obj['size'] = ApiClient.convertToType(data['size'], 'String');
            }
            if (data.hasOwnProperty('width')) {
                obj['width'] = ApiClient.convertToType(data['width'], 'String');
            }
            if (data.hasOwnProperty('height')) {
                obj['height'] = ApiClient.convertToType(data['height'], 'String');
            }
            if (data.hasOwnProperty('transforms')) {
                obj['transforms'] = AssetTransformCollection.constructFromObject(data['transforms']);
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = TagCollection.constructFromObject(data['tags']);
            }
        }
        return obj;
    }


}

/**
 * @member {String} id
 */
Asset.prototype['id'] = undefined;

/**
 * @member {String} title
 */
Asset.prototype['title'] = undefined;

/**
 * @member {String} type
 */
Asset.prototype['type'] = undefined;

/**
 * @member {String} caption
 */
Asset.prototype['caption'] = undefined;

/**
 * @member {String} kind
 */
Asset.prototype['kind'] = undefined;

/**
 * @member {Boolean} external
 */
Asset.prototype['external'] = undefined;

/**
 * @member {Number} position
 */
Asset.prototype['position'] = undefined;

/**
 * @member {Boolean} primary
 */
Asset.prototype['primary'] = undefined;

/**
 * @member {String} url
 */
Asset.prototype['url'] = undefined;

/**
 * @member {String} sub_kind
 */
Asset.prototype['sub_kind'] = undefined;

/**
 * @member {String} extension
 */
Asset.prototype['extension'] = undefined;

/**
 * @member {String} original_filename
 */
Asset.prototype['original_filename'] = undefined;

/**
 * @member {String} size
 */
Asset.prototype['size'] = undefined;

/**
 * @member {String} width
 */
Asset.prototype['width'] = undefined;

/**
 * @member {String} height
 */
Asset.prototype['height'] = undefined;

/**
 * @member {module:model/AssetTransformCollection} transforms
 */
Asset.prototype['transforms'] = undefined;

/**
 * @member {module:model/TagCollection} tags
 */
Asset.prototype['tags'] = undefined;






export default Asset;


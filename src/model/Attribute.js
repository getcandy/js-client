/**
 * GetCandy
 * The GetCandy API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AttributeGroupResponse from './AttributeGroupResponse';

/**
 * The Attribute model module.
 * @module model/Attribute
 * @version 1.0.0
 */
class Attribute {
    /**
     * Constructs a new <code>Attribute</code>.
     * ### Available includes - group
     * @alias module:model/Attribute
     */
    constructor() { 
        
        Attribute.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Attribute</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Attribute} obj Optional instance to populate.
     * @return {module:model/Attribute} The populated <code>Attribute</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Attribute();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], Object);
            }
            if (data.hasOwnProperty('handle')) {
                obj['handle'] = ApiClient.convertToType(data['handle'], 'String');
            }
            if (data.hasOwnProperty('position')) {
                obj['position'] = ApiClient.convertToType(data['position'], 'Number');
            }
            if (data.hasOwnProperty('filterable')) {
                obj['filterable'] = ApiClient.convertToType(data['filterable'], 'Boolean');
            }
            if (data.hasOwnProperty('scopeable')) {
                obj['scopeable'] = ApiClient.convertToType(data['scopeable'], 'Boolean');
            }
            if (data.hasOwnProperty('translatable')) {
                obj['translatable'] = ApiClient.convertToType(data['translatable'], 'Boolean');
            }
            if (data.hasOwnProperty('variant')) {
                obj['variant'] = ApiClient.convertToType(data['variant'], 'Boolean');
            }
            if (data.hasOwnProperty('searchable')) {
                obj['searchable'] = ApiClient.convertToType(data['searchable'], 'Boolean');
            }
            if (data.hasOwnProperty('localised')) {
                obj['localised'] = ApiClient.convertToType(data['localised'], 'Boolean');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('required')) {
                obj['required'] = ApiClient.convertToType(data['required'], 'Boolean');
            }
            if (data.hasOwnProperty('lookups')) {
                obj['lookups'] = ApiClient.convertToType(data['lookups'], [Object]);
            }
            if (data.hasOwnProperty('system')) {
                obj['system'] = ApiClient.convertToType(data['system'], 'Boolean');
            }
            if (data.hasOwnProperty('group')) {
                obj['group'] = AttributeGroupResponse.constructFromObject(data['group']);
            }
        }
        return obj;
    }


}

/**
 * @member {String} id
 */
Attribute.prototype['id'] = undefined;

/**
 * @member {Object} name
 */
Attribute.prototype['name'] = undefined;

/**
 * @member {String} handle
 */
Attribute.prototype['handle'] = undefined;

/**
 * @member {Number} position
 */
Attribute.prototype['position'] = undefined;

/**
 * @member {Boolean} filterable
 */
Attribute.prototype['filterable'] = undefined;

/**
 * @member {Boolean} scopeable
 */
Attribute.prototype['scopeable'] = undefined;

/**
 * @member {Boolean} translatable
 */
Attribute.prototype['translatable'] = undefined;

/**
 * @member {Boolean} variant
 */
Attribute.prototype['variant'] = undefined;

/**
 * @member {Boolean} searchable
 */
Attribute.prototype['searchable'] = undefined;

/**
 * @member {Boolean} localised
 */
Attribute.prototype['localised'] = undefined;

/**
 * @member {String} type
 */
Attribute.prototype['type'] = undefined;

/**
 * @member {Boolean} required
 */
Attribute.prototype['required'] = undefined;

/**
 * @member {Array.<Object>} lookups
 */
Attribute.prototype['lookups'] = undefined;

/**
 * @member {Boolean} system
 */
Attribute.prototype['system'] = undefined;

/**
 * @member {module:model/AttributeGroupResponse} group
 */
Attribute.prototype['group'] = undefined;






export default Attribute;


/**
 * GetCandy
 * The GetCandy API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BasketLineCollection from './BasketLineCollection';
import OrderResponse from './OrderResponse';

/**
 * The Basket model module.
 * @module model/Basket
 * @version 1.0.0
 */
class Basket {
    /**
     * Constructs a new <code>Basket</code>.
     * @alias module:model/Basket
     */
    constructor() { 
        
        Basket.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Basket</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Basket} obj Optional instance to populate.
     * @return {module:model/Basket} The populated <code>Basket</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Basket();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('total')) {
                obj['total'] = ApiClient.convertToType(data['total'], 'Number');
            }
            if (data.hasOwnProperty('sub_total')) {
                obj['sub_total'] = ApiClient.convertToType(data['sub_total'], 'Number');
            }
            if (data.hasOwnProperty('tax_total')) {
                obj['tax_total'] = ApiClient.convertToType(data['tax_total'], 'Number');
            }
            if (data.hasOwnProperty('discount_total')) {
                obj['discount_total'] = ApiClient.convertToType(data['discount_total'], 'Number');
            }
            if (data.hasOwnProperty('changed')) {
                obj['changed'] = ApiClient.convertToType(data['changed'], 'Boolean');
            }
            if (data.hasOwnProperty('has_exclusions')) {
                obj['has_exclusions'] = ApiClient.convertToType(data['has_exclusions'], 'Boolean');
            }
            if (data.hasOwnProperty('meta')) {
                obj['meta'] = ApiClient.convertToType(data['meta'], Object);
            }
            if (data.hasOwnProperty('lines')) {
                obj['lines'] = BasketLineCollection.constructFromObject(data['lines']);
            }
            if (data.hasOwnProperty('order')) {
                obj['order'] = OrderResponse.constructFromObject(data['order']);
            }
        }
        return obj;
    }


}

/**
 * @member {String} id
 */
Basket.prototype['id'] = undefined;

/**
 * @member {Number} total
 */
Basket.prototype['total'] = undefined;

/**
 * @member {Number} sub_total
 */
Basket.prototype['sub_total'] = undefined;

/**
 * @member {Number} tax_total
 */
Basket.prototype['tax_total'] = undefined;

/**
 * @member {Number} discount_total
 */
Basket.prototype['discount_total'] = undefined;

/**
 * @member {Boolean} changed
 */
Basket.prototype['changed'] = undefined;

/**
 * @member {Boolean} has_exclusions
 */
Basket.prototype['has_exclusions'] = undefined;

/**
 * @member {Object} meta
 */
Basket.prototype['meta'] = undefined;

/**
 * @member {module:model/BasketLineCollection} lines
 */
Basket.prototype['lines'] = undefined;

/**
 * @member {module:model/OrderResponse} order
 */
Basket.prototype['order'] = undefined;






export default Basket;


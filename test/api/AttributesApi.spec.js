/**
 * GetCandy
 * The GetCandy API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GetcandyJs);
  }
}(this, function(expect, GetcandyJs) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GetcandyJs.AttributesApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AttributesApi', function() {
    describe('deleteAttributeGroupsAttributeGroupId', function() {
      it('should call deleteAttributeGroupsAttributeGroupId successfully', function(done) {
        //uncomment below and update the code to test deleteAttributeGroupsAttributeGroupId
        //instance.deleteAttributeGroupsAttributeGroupId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAttributesAttributeId', function() {
      it('should call deleteAttributesAttributeId successfully', function(done) {
        //uncomment below and update the code to test deleteAttributesAttributeId
        //instance.deleteAttributesAttributeId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAttributeGroups', function() {
      it('should call getAttributeGroups successfully', function(done) {
        //uncomment below and update the code to test getAttributeGroups
        //instance.getAttributeGroups(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAttributeGroupsAttributeGroupId', function() {
      it('should call getAttributeGroupsAttributeGroupId successfully', function(done) {
        //uncomment below and update the code to test getAttributeGroupsAttributeGroupId
        //instance.getAttributeGroupsAttributeGroupId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAttributes', function() {
      it('should call getAttributes successfully', function(done) {
        //uncomment below and update the code to test getAttributes
        //instance.getAttributes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAttributesAttributeId', function() {
      it('should call getAttributesAttributeId successfully', function(done) {
        //uncomment below and update the code to test getAttributesAttributeId
        //instance.getAttributesAttributeId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postAttributeGroups', function() {
      it('should call postAttributeGroups successfully', function(done) {
        //uncomment below and update the code to test postAttributeGroups
        //instance.postAttributeGroups(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postAttributes', function() {
      it('should call postAttributes successfully', function(done) {
        //uncomment below and update the code to test postAttributes
        //instance.postAttributes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putAttributeGroupsAttributeGroupId', function() {
      it('should call putAttributeGroupsAttributeGroupId successfully', function(done) {
        //uncomment below and update the code to test putAttributeGroupsAttributeGroupId
        //instance.putAttributeGroupsAttributeGroupId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putAttributeGroupsReorder', function() {
      it('should call putAttributeGroupsReorder successfully', function(done) {
        //uncomment below and update the code to test putAttributeGroupsReorder
        //instance.putAttributeGroupsReorder(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putAttributesAttributeId', function() {
      it('should call putAttributesAttributeId successfully', function(done) {
        //uncomment below and update the code to test putAttributesAttributeId
        //instance.putAttributesAttributeId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putAttributesOrder', function() {
      it('should call putAttributesOrder successfully', function(done) {
        //uncomment below and update the code to test putAttributesOrder
        //instance.putAttributesOrder(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));

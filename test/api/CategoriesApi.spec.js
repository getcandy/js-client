/**
 * GetCandy
 * The GetCandy API
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@getcandy.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.@GetcandyJsClient);
  }
}(this, function(expect, @GetcandyJsClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new @GetcandyJsClient.CategoriesApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CategoriesApi', function() {
    describe('getCategories', function() {
      it('should call getCategories successfully', function(done) {
        //uncomment below and update the code to test getCategories
        //instance.getCategories(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCategoriesCategoryId', function() {
      it('should call getCategoriesCategoryId successfully', function(done) {
        //uncomment below and update the code to test getCategoriesCategoryId
        //instance.getCategoriesCategoryId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCategoriesParentParentId', function() {
      it('should call getCategoriesParentParentId successfully', function(done) {
        //uncomment below and update the code to test getCategoriesParentParentId
        //instance.getCategoriesParentParentId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postCategories', function() {
      it('should call postCategories successfully', function(done) {
        //uncomment below and update the code to test postCategories
        //instance.postCategories(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postCategoriesCategoryIdChannels', function() {
      it('should call postCategoriesCategoryIdChannels successfully', function(done) {
        //uncomment below and update the code to test postCategoriesCategoryIdChannels
        //instance.postCategoriesCategoryIdChannels(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postCategoriesCategoryIdCustomerGroups', function() {
      it('should call postCategoriesCategoryIdCustomerGroups successfully', function(done) {
        //uncomment below and update the code to test postCategoriesCategoryIdCustomerGroups
        //instance.postCategoriesCategoryIdCustomerGroups(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postCategoriesCategoryLayouts', function() {
      it('should call postCategoriesCategoryLayouts successfully', function(done) {
        //uncomment below and update the code to test postCategoriesCategoryLayouts
        //instance.postCategoriesCategoryLayouts(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postCategoriesCategoryRoutes', function() {
      it('should call postCategoriesCategoryRoutes successfully', function(done) {
        //uncomment below and update the code to test postCategoriesCategoryRoutes
        //instance.postCategoriesCategoryRoutes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postCategoriesReorder', function() {
      it('should call postCategoriesReorder successfully', function(done) {
        //uncomment below and update the code to test postCategoriesReorder
        //instance.postCategoriesReorder(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putCategoriesCategoryId', function() {
      it('should call putCategoriesCategoryId successfully', function(done) {
        //uncomment below and update the code to test putCategoriesCategoryId
        //instance.putCategoriesCategoryId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putCategoriesCategoryIdProducts', function() {
      it('should call putCategoriesCategoryIdProducts successfully', function(done) {
        //uncomment below and update the code to test putCategoriesCategoryIdProducts
        //instance.putCategoriesCategoryIdProducts(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));

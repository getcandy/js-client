/**
 * GetCandy
 * The GetCandy API
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@getcandy.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GetcandyJs);
  }
}(this, function(expect, GetcandyJs) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GetcandyJs.ProductsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ProductsApi', function() {
    describe('deleteProductsProductCategoriesCategory', function() {
      it('should call deleteProductsProductCategoriesCategory successfully', function(done) {
        //uncomment below and update the code to test deleteProductsProductCategoriesCategory
        //instance.deleteProductsProductCategoriesCategory(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteProductsProductCollectionsDetach', function() {
      it('should call deleteProductsProductCollectionsDetach successfully', function(done) {
        //uncomment below and update the code to test deleteProductsProductCollectionsDetach
        //instance.deleteProductsProductCollectionsDetach(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteProductsProductCustomerGroups', function() {
      it('should call deleteProductsProductCustomerGroups successfully', function(done) {
        //uncomment below and update the code to test deleteProductsProductCustomerGroups
        //instance.deleteProductsProductCustomerGroups(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteProductsProductId', function() {
      it('should call deleteProductsProductId successfully', function(done) {
        //uncomment below and update the code to test deleteProductsProductId
        //instance.deleteProductsProductId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteProductsProductIdAssociations', function() {
      it('should call deleteProductsProductIdAssociations successfully', function(done) {
        //uncomment below and update the code to test deleteProductsProductIdAssociations
        //instance.deleteProductsProductIdAssociations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getProducts', function() {
      it('should call getProducts successfully', function(done) {
        //uncomment below and update the code to test getProducts
        //instance.getProducts(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getProductsProductId', function() {
      it('should call getProductsProductId successfully', function(done) {
        //uncomment below and update the code to test getProductsProductId
        //instance.getProductsProductId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getProductsProductIdDrafts', function() {
      it('should call getProductsProductIdDrafts successfully', function(done) {
        //uncomment below and update the code to test getProductsProductIdDrafts
        //instance.getProductsProductIdDrafts(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getProductsRecommended', function() {
      it('should call getProductsRecommended successfully', function(done) {
        //uncomment below and update the code to test getProductsRecommended
        //instance.getProductsRecommended(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postProductRedirects', function() {
      it('should call postProductRedirects successfully', function(done) {
        //uncomment below and update the code to test postProductRedirects
        //instance.postProductRedirects(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postProductUrls', function() {
      it('should call postProductUrls successfully', function(done) {
        //uncomment below and update the code to test postProductUrls
        //instance.postProductUrls(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postProducts', function() {
      it('should call postProducts successfully', function(done) {
        //uncomment below and update the code to test postProducts
        //instance.postProducts(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postProductsIdDrafts', function() {
      it('should call postProductsIdDrafts successfully', function(done) {
        //uncomment below and update the code to test postProductsIdDrafts
        //instance.postProductsIdDrafts(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postProductsIdPublish', function() {
      it('should call postProductsIdPublish successfully', function(done) {
        //uncomment below and update the code to test postProductsIdPublish
        //instance.postProductsIdPublish(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postProductsProductAssociations', function() {
      it('should call postProductsProductAssociations successfully', function(done) {
        //uncomment below and update the code to test postProductsProductAssociations
        //instance.postProductsProductAssociations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postProductsProductAttributes', function() {
      it('should call postProductsProductAttributes successfully', function(done) {
        //uncomment below and update the code to test postProductsProductAttributes
        //instance.postProductsProductAttributes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postProductsProductCategories', function() {
      it('should call postProductsProductCategories successfully', function(done) {
        //uncomment below and update the code to test postProductsProductCategories
        //instance.postProductsProductCategories(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postProductsProductChannels', function() {
      it('should call postProductsProductChannels successfully', function(done) {
        //uncomment below and update the code to test postProductsProductChannels
        //instance.postProductsProductChannels(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postProductsProductCustomerGroups', function() {
      it('should call postProductsProductCustomerGroups successfully', function(done) {
        //uncomment below and update the code to test postProductsProductCustomerGroups
        //instance.postProductsProductCustomerGroups(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postProductsProductIdCollections', function() {
      it('should call postProductsProductIdCollections successfully', function(done) {
        //uncomment below and update the code to test postProductsProductIdCollections
        //instance.postProductsProductIdCollections(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postProductsProductIdDuplicate', function() {
      it('should call postProductsProductIdDuplicate successfully', function(done) {
        //uncomment below and update the code to test postProductsProductIdDuplicate
        //instance.postProductsProductIdDuplicate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putProductsProductId', function() {
      it('should call putProductsProductId successfully', function(done) {
        //uncomment below and update the code to test putProductsProductId
        //instance.putProductsProductId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));

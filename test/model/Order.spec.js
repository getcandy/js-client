/**
 * GetCandy
 * The GetCandy API
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@getcandy.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.@GetcandyJsClient);
  }
}(this, function(expect, @GetcandyJsClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new @GetcandyJsClient.Order();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Order', function() {
    it('should create an instance of Order', function() {
      // uncomment below and update the code to test Order
      //var instane = new @GetcandyJsClient.Order();
      //expect(instance).to.be.a(@GetcandyJsClient.Order);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instane = new @GetcandyJsClient.Order();
      //expect(instance).to.be();
    });

    it('should have the property displayId (base name: "display_id")', function() {
      // uncomment below and update the code to test the property displayId
      //var instane = new @GetcandyJsClient.Order();
      //expect(instance).to.be();
    });

    it('should have the property subTotal (base name: "sub_total")', function() {
      // uncomment below and update the code to test the property subTotal
      //var instane = new @GetcandyJsClient.Order();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instane = new @GetcandyJsClient.Order();
      //expect(instance).to.be();
    });

    it('should have the property deliveryTotal (base name: "delivery_total")', function() {
      // uncomment below and update the code to test the property deliveryTotal
      //var instane = new @GetcandyJsClient.Order();
      //expect(instance).to.be();
    });

    it('should have the property discountTotal (base name: "discount_total")', function() {
      // uncomment below and update the code to test the property discountTotal
      //var instane = new @GetcandyJsClient.Order();
      //expect(instance).to.be();
    });

    it('should have the property taxTotal (base name: "tax_total")', function() {
      // uncomment below and update the code to test the property taxTotal
      //var instane = new @GetcandyJsClient.Order();
      //expect(instance).to.be();
    });

    it('should have the property shippingPreference (base name: "shipping_preference")', function() {
      // uncomment below and update the code to test the property shippingPreference
      //var instane = new @GetcandyJsClient.Order();
      //expect(instance).to.be();
    });

    it('should have the property shippingMethod (base name: "shipping_method")', function() {
      // uncomment below and update the code to test the property shippingMethod
      //var instane = new @GetcandyJsClient.Order();
      //expect(instance).to.be();
    });

    it('should have the property orderTotal (base name: "order_total")', function() {
      // uncomment below and update the code to test the property orderTotal
      //var instane = new @GetcandyJsClient.Order();
      //expect(instance).to.be();
    });

    it('should have the property reference (base name: "reference")', function() {
      // uncomment below and update the code to test the property reference
      //var instane = new @GetcandyJsClient.Order();
      //expect(instance).to.be();
    });

    it('should have the property customerReference (base name: "customer_reference")', function() {
      // uncomment below and update the code to test the property customerReference
      //var instane = new @GetcandyJsClient.Order();
      //expect(instance).to.be();
    });

    it('should have the property invoiceReference (base name: "invoice_reference")', function() {
      // uncomment below and update the code to test the property invoiceReference
      //var instane = new @GetcandyJsClient.Order();
      //expect(instance).to.be();
    });

    it('should have the property vatNo (base name: "vat_no")', function() {
      // uncomment below and update the code to test the property vatNo
      //var instane = new @GetcandyJsClient.Order();
      //expect(instance).to.be();
    });

    it('should have the property trackingNo (base name: "tracking_no")', function() {
      // uncomment below and update the code to test the property trackingNo
      //var instane = new @GetcandyJsClient.Order();
      //expect(instance).to.be();
    });

    it('should have the property dispatchedAt (base name: "dispatched_at")', function() {
      // uncomment below and update the code to test the property dispatchedAt
      //var instane = new @GetcandyJsClient.Order();
      //expect(instance).to.be();
    });

    it('should have the property currency (base name: "currency")', function() {
      // uncomment below and update the code to test the property currency
      //var instane = new @GetcandyJsClient.Order();
      //expect(instance).to.be();
    });

    it('should have the property customerName (base name: "customer_name")', function() {
      // uncomment below and update the code to test the property customerName
      //var instane = new @GetcandyJsClient.Order();
      //expect(instance).to.be();
    });

    it('should have the property contactDetails (base name: "contact_details")', function() {
      // uncomment below and update the code to test the property contactDetails
      //var instane = new @GetcandyJsClient.Order();
      //expect(instance).to.be();
    });

    it('should have the property billingDetails (base name: "billing_details")', function() {
      // uncomment below and update the code to test the property billingDetails
      //var instane = new @GetcandyJsClient.Order();
      //expect(instance).to.be();
    });

    it('should have the property shippingDetails (base name: "shipping_details")', function() {
      // uncomment below and update the code to test the property shippingDetails
      //var instane = new @GetcandyJsClient.Order();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instane = new @GetcandyJsClient.Order();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "created_at")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instane = new @GetcandyJsClient.Order();
      //expect(instance).to.be();
    });

    it('should have the property updatedAt (base name: "updated_at")', function() {
      // uncomment below and update the code to test the property updatedAt
      //var instane = new @GetcandyJsClient.Order();
      //expect(instance).to.be();
    });

    it('should have the property notes (base name: "notes")', function() {
      // uncomment below and update the code to test the property notes
      //var instane = new @GetcandyJsClient.Order();
      //expect(instance).to.be();
    });

    it('should have the property meta (base name: "meta")', function() {
      // uncomment below and update the code to test the property meta
      //var instane = new @GetcandyJsClient.Order();
      //expect(instance).to.be();
    });

    it('should have the property basket (base name: "basket")', function() {
      // uncomment below and update the code to test the property basket
      //var instane = new @GetcandyJsClient.Order();
      //expect(instance).to.be();
    });

    it('should have the property discounts (base name: "discounts")', function() {
      // uncomment below and update the code to test the property discounts
      //var instane = new @GetcandyJsClient.Order();
      //expect(instance).to.be();
    });

    it('should have the property transactions (base name: "transactions")', function() {
      // uncomment below and update the code to test the property transactions
      //var instane = new @GetcandyJsClient.Order();
      //expect(instance).to.be();
    });

    it('should have the property lines (base name: "lines")', function() {
      // uncomment below and update the code to test the property lines
      //var instane = new @GetcandyJsClient.Order();
      //expect(instance).to.be();
    });

    it('should have the property shipping (base name: "shipping")', function() {
      // uncomment below and update the code to test the property shipping
      //var instane = new @GetcandyJsClient.Order();
      //expect(instance).to.be();
    });

    it('should have the property logs (base name: "logs")', function() {
      // uncomment below and update the code to test the property logs
      //var instane = new @GetcandyJsClient.Order();
      //expect(instance).to.be();
    });

    it('should have the property user (base name: "user")', function() {
      // uncomment below and update the code to test the property user
      //var instane = new @GetcandyJsClient.Order();
      //expect(instance).to.be();
    });

  });

}));

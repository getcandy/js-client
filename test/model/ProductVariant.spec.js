/**
 * GetCandy
 * The GetCandy API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GetcandyJs);
  }
}(this, function(expect, GetcandyJs) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GetcandyJs.ProductVariant();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ProductVariant', function() {
    it('should create an instance of ProductVariant', function() {
      // uncomment below and update the code to test ProductVariant
      //var instane = new GetcandyJs.ProductVariant();
      //expect(instance).to.be.a(GetcandyJs.ProductVariant);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instane = new GetcandyJs.ProductVariant();
      //expect(instance).to.be();
    });

    it('should have the property sku (base name: "sku")', function() {
      // uncomment below and update the code to test the property sku
      //var instane = new GetcandyJs.ProductVariant();
      //expect(instance).to.be();
    });

    it('should have the property backorder (base name: "backorder")', function() {
      // uncomment below and update the code to test the property backorder
      //var instane = new GetcandyJs.ProductVariant();
      //expect(instance).to.be();
    });

    it('should have the property requiresShipping (base name: "requires_shipping")', function() {
      // uncomment below and update the code to test the property requiresShipping
      //var instane = new GetcandyJs.ProductVariant();
      //expect(instance).to.be();
    });

    it('should have the property price (base name: "price")', function() {
      // uncomment below and update the code to test the property price
      //var instane = new GetcandyJs.ProductVariant();
      //expect(instance).to.be();
    });

    it('should have the property factorTax (base name: "factor_tax")', function() {
      // uncomment below and update the code to test the property factorTax
      //var instane = new GetcandyJs.ProductVariant();
      //expect(instance).to.be();
    });

    it('should have the property unitPrice (base name: "unit_price")', function() {
      // uncomment below and update the code to test the property unitPrice
      //var instane = new GetcandyJs.ProductVariant();
      //expect(instance).to.be();
    });

    it('should have the property totalTax (base name: "total_tax")', function() {
      // uncomment below and update the code to test the property totalTax
      //var instane = new GetcandyJs.ProductVariant();
      //expect(instance).to.be();
    });

    it('should have the property unitTax (base name: "unit_tax")', function() {
      // uncomment below and update the code to test the property unitTax
      //var instane = new GetcandyJs.ProductVariant();
      //expect(instance).to.be();
    });

    it('should have the property unitQty (base name: "unit_qty")', function() {
      // uncomment below and update the code to test the property unitQty
      //var instane = new GetcandyJs.ProductVariant();
      //expect(instance).to.be();
    });

    it('should have the property minQty (base name: "min_qty")', function() {
      // uncomment below and update the code to test the property minQty
      //var instane = new GetcandyJs.ProductVariant();
      //expect(instance).to.be();
    });

    it('should have the property maxQty (base name: "max_qty")', function() {
      // uncomment below and update the code to test the property maxQty
      //var instane = new GetcandyJs.ProductVariant();
      //expect(instance).to.be();
    });

    it('should have the property minBatch (base name: "min_batch")', function() {
      // uncomment below and update the code to test the property minBatch
      //var instane = new GetcandyJs.ProductVariant();
      //expect(instance).to.be();
    });

    it('should have the property inventory (base name: "inventory")', function() {
      // uncomment below and update the code to test the property inventory
      //var instane = new GetcandyJs.ProductVariant();
      //expect(instance).to.be();
    });

    it('should have the property incoming (base name: "incoming")', function() {
      // uncomment below and update the code to test the property incoming
      //var instane = new GetcandyJs.ProductVariant();
      //expect(instance).to.be();
    });

    it('should have the property groupPricing (base name: "group_pricing")', function() {
      // uncomment below and update the code to test the property groupPricing
      //var instane = new GetcandyJs.ProductVariant();
      //expect(instance).to.be();
    });

    it('should have the property weight (base name: "weight")', function() {
      // uncomment below and update the code to test the property weight
      //var instane = new GetcandyJs.ProductVariant();
      //expect(instance).to.be();
    });

    it('should have the property height (base name: "height")', function() {
      // uncomment below and update the code to test the property height
      //var instane = new GetcandyJs.ProductVariant();
      //expect(instance).to.be();
    });

    it('should have the property width (base name: "width")', function() {
      // uncomment below and update the code to test the property width
      //var instane = new GetcandyJs.ProductVariant();
      //expect(instance).to.be();
    });

    it('should have the property depth (base name: "depth")', function() {
      // uncomment below and update the code to test the property depth
      //var instane = new GetcandyJs.ProductVariant();
      //expect(instance).to.be();
    });

    it('should have the property volume (base name: "volume")', function() {
      // uncomment below and update the code to test the property volume
      //var instane = new GetcandyJs.ProductVariant();
      //expect(instance).to.be();
    });

  });

}));
